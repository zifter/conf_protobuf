// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/Status2.proto

#ifndef PROTOBUF_v2_2fStatus2_2eproto__INCLUDED
#define PROTOBUF_v2_2fStatus2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_v2_2fStatus2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsStatus2Impl();
void InitDefaultsStatus2();
inline void InitDefaults() {
  InitDefaultsStatus2();
}
}  // namespace protobuf_v2_2fStatus2_2eproto
namespace v2 {
class Status2;
class Status2DefaultTypeInternal;
extern Status2DefaultTypeInternal _Status2_default_instance_;
}  // namespace v2
namespace v2 {

// ===================================================================

class Status2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v2.Status2) */ {
 public:
  Status2();
  virtual ~Status2();

  Status2(const Status2& from);

  inline Status2& operator=(const Status2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Status2(Status2&& from) noexcept
    : Status2() {
    *this = ::std::move(from);
  }

  inline Status2& operator=(Status2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Status2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Status2* internal_default_instance() {
    return reinterpret_cast<const Status2*>(
               &_Status2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Status2* other);
  friend void swap(Status2& a, Status2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Status2* New() const PROTOBUF_FINAL { return New(NULL); }

  Status2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Status2& from);
  void MergeFrom(const Status2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Status2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string lang = 2;
  bool has_lang() const;
  void clear_lang();
  static const int kLangFieldNumber = 2;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v2.Status2)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_lang();
  void clear_has_lang();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_v2_2fStatus2_2eproto::TableStruct;
  friend void ::protobuf_v2_2fStatus2_2eproto::InitDefaultsStatus2Impl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Status2

// required int32 status = 1;
inline bool Status2::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Status2::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Status2::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Status2::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Status2::status() const {
  // @@protoc_insertion_point(field_get:v2.Status2.status)
  return status_;
}
inline void Status2::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:v2.Status2.status)
}

// optional string lang = 2;
inline bool Status2::has_lang() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Status2::set_has_lang() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Status2::clear_has_lang() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Status2::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
inline const ::std::string& Status2::lang() const {
  // @@protoc_insertion_point(field_get:v2.Status2.lang)
  return lang_.GetNoArena();
}
inline void Status2::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v2.Status2.lang)
}
#if LANG_CXX11
inline void Status2::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v2.Status2.lang)
}
#endif
inline void Status2::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v2.Status2.lang)
}
inline void Status2::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v2.Status2.lang)
}
inline ::std::string* Status2::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:v2.Status2.lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Status2::release_lang() {
  // @@protoc_insertion_point(field_release:v2.Status2.lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Status2::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:v2.Status2.lang)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_v2_2fStatus2_2eproto__INCLUDED
