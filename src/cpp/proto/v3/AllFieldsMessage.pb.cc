// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v3/AllFieldsMessage.proto

#include "v3/AllFieldsMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace v3 {
class AllFieldsMessage_DataInt32StrMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse>
      _instance;
} _AllFieldsMessage_DataInt32StrMapEntry_DoNotUse_default_instance_;
class AllFieldsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllFieldsMessage>
      _instance;
} _AllFieldsMessage_default_instance_;
}  // namespace v3
namespace protobuf_v3_2fAllFieldsMessage_2eproto {
void InitDefaultsAllFieldsMessage_DataInt32StrMapEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::v3::_AllFieldsMessage_DataInt32StrMapEntry_DoNotUse_default_instance_;
    new (ptr) ::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse();
  }
  ::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsAllFieldsMessage_DataInt32StrMapEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllFieldsMessage_DataInt32StrMapEntry_DoNotUseImpl);
}

void InitDefaultsAllFieldsMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_v3_2fAllFieldsMessage_2eproto::InitDefaultsAllFieldsMessage_DataInt32StrMapEntry_DoNotUse();
  {
    void* ptr = &::v3::_AllFieldsMessage_default_instance_;
    new (ptr) ::v3::AllFieldsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v3::AllFieldsMessage::InitAsDefaultInstance();
}

void InitDefaultsAllFieldsMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllFieldsMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_sfixed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, enum_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_int32_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::AllFieldsMessage, data_int32_str_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::v3::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse)},
  { 9, -1, sizeof(::v3::AllFieldsMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v3::_AllFieldsMessage_DataInt32StrMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v3::_AllFieldsMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "v3/AllFieldsMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031v3/AllFieldsMessage.proto\022\002v3\"\330\004\n\020AllF"
      "ieldsMessage\022\023\n\013data_double\030\001 \001(\001\022\022\n\ndat"
      "a_float\030\002 \001(\002\022\022\n\ndata_int32\030\003 \001(\005\022\022\n\ndat"
      "a_int64\030\004 \001(\003\022\023\n\013data_uint32\030\005 \001(\r\022\023\n\013da"
      "ta_uint64\030\006 \001(\004\022\023\n\013data_sint32\030\007 \001(\021\022\023\n\013"
      "data_sint64\030\010 \001(\022\022\024\n\014data_fixed32\030\t \001(\007\022"
      "\024\n\014data_fixed64\030\n \001(\006\022\025\n\rdata_sfixed32\030\013"
      " \001(\017\022\023\n\013data_sfixed\030\014 \001(\020\022\021\n\tdata_bool\030\r"
      " \001(\010\022\023\n\013data_string\030\016 \001(\t\022\022\n\ndata_bytes\030"
      "\017 \001(\014\0221\n\tenum_data\030\020 \001(\0162\036.v3.AllFieldsM"
      "essage.EnumField\022\030\n\020data_int32_array\030\021 \003"
      "(\005\022E\n\022data_int32_str_map\030\022 \003(\0132).v3.AllF"
      "ieldsMessage.DataInt32StrMapEntry\0326\n\024Dat"
      "aInt32StrMapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030"
      "\002 \001(\t:\0028\001\"\?\n\tEnumField\022\013\n\007VALUE_0\020\000\022\013\n\007V"
      "ALUE_1\020\001\022\013\n\007VALUE_2\020\002\022\013\n\007VALUE_3\020\003b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 642);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "v3/AllFieldsMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_v3_2fAllFieldsMessage_2eproto
namespace v3 {
const ::google::protobuf::EnumDescriptor* AllFieldsMessage_EnumField_descriptor() {
  protobuf_v3_2fAllFieldsMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_v3_2fAllFieldsMessage_2eproto::file_level_enum_descriptors[0];
}
bool AllFieldsMessage_EnumField_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AllFieldsMessage_EnumField AllFieldsMessage::VALUE_0;
const AllFieldsMessage_EnumField AllFieldsMessage::VALUE_1;
const AllFieldsMessage_EnumField AllFieldsMessage::VALUE_2;
const AllFieldsMessage_EnumField AllFieldsMessage::VALUE_3;
const AllFieldsMessage_EnumField AllFieldsMessage::EnumField_MIN;
const AllFieldsMessage_EnumField AllFieldsMessage::EnumField_MAX;
const int AllFieldsMessage::EnumField_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse() {}
AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::AllFieldsMessage_DataInt32StrMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::MergeFrom(const AllFieldsMessage_DataInt32StrMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_v3_2fAllFieldsMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fAllFieldsMessage_2eproto::file_level_metadata[0];
}
void AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void AllFieldsMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllFieldsMessage::kDataDoubleFieldNumber;
const int AllFieldsMessage::kDataFloatFieldNumber;
const int AllFieldsMessage::kDataInt32FieldNumber;
const int AllFieldsMessage::kDataInt64FieldNumber;
const int AllFieldsMessage::kDataUint32FieldNumber;
const int AllFieldsMessage::kDataUint64FieldNumber;
const int AllFieldsMessage::kDataSint32FieldNumber;
const int AllFieldsMessage::kDataSint64FieldNumber;
const int AllFieldsMessage::kDataFixed32FieldNumber;
const int AllFieldsMessage::kDataFixed64FieldNumber;
const int AllFieldsMessage::kDataSfixed32FieldNumber;
const int AllFieldsMessage::kDataSfixedFieldNumber;
const int AllFieldsMessage::kDataBoolFieldNumber;
const int AllFieldsMessage::kDataStringFieldNumber;
const int AllFieldsMessage::kDataBytesFieldNumber;
const int AllFieldsMessage::kEnumDataFieldNumber;
const int AllFieldsMessage::kDataInt32ArrayFieldNumber;
const int AllFieldsMessage::kDataInt32StrMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllFieldsMessage::AllFieldsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_v3_2fAllFieldsMessage_2eproto::InitDefaultsAllFieldsMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:v3.AllFieldsMessage)
}
AllFieldsMessage::AllFieldsMessage(const AllFieldsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_int32_array_(from.data_int32_array_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_int32_str_map_.MergeFrom(from.data_int32_str_map_);
  data_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_string().size() > 0) {
    data_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_string_);
  }
  data_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_bytes().size() > 0) {
    data_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_bytes_);
  }
  ::memcpy(&data_double_, &from.data_double_,
    static_cast<size_t>(reinterpret_cast<char*>(&enum_data_) -
    reinterpret_cast<char*>(&data_double_)) + sizeof(enum_data_));
  // @@protoc_insertion_point(copy_constructor:v3.AllFieldsMessage)
}

void AllFieldsMessage::SharedCtor() {
  data_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_double_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_data_) -
      reinterpret_cast<char*>(&data_double_)) + sizeof(enum_data_));
  _cached_size_ = 0;
}

AllFieldsMessage::~AllFieldsMessage() {
  // @@protoc_insertion_point(destructor:v3.AllFieldsMessage)
  SharedDtor();
}

void AllFieldsMessage::SharedDtor() {
  data_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllFieldsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllFieldsMessage::descriptor() {
  ::protobuf_v3_2fAllFieldsMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fAllFieldsMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllFieldsMessage& AllFieldsMessage::default_instance() {
  ::protobuf_v3_2fAllFieldsMessage_2eproto::InitDefaultsAllFieldsMessage();
  return *internal_default_instance();
}

AllFieldsMessage* AllFieldsMessage::New(::google::protobuf::Arena* arena) const {
  AllFieldsMessage* n = new AllFieldsMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllFieldsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:v3.AllFieldsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_int32_array_.Clear();
  data_int32_str_map_.Clear();
  data_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_double_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_data_) -
      reinterpret_cast<char*>(&data_double_)) + sizeof(enum_data_));
  _internal_metadata_.Clear();
}

bool AllFieldsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v3.AllFieldsMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double data_double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &data_double_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float data_float = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 data_int32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 data_int64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_int64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_uint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_uint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 data_sint32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &data_sint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_sint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_sint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 data_fixed32 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &data_fixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 data_fixed64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &data_fixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 data_sfixed32 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &data_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 data_sfixed = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &data_sfixed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool data_bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_string().data(), static_cast<int>(this->data_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v3.AllFieldsMessage.data_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data_bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v3.AllFieldsMessage.EnumField enum_data = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_data(static_cast< ::v3::AllFieldsMessage_EnumField >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 data_int32_array = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data_int32_array())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 138u, input, this->mutable_data_int32_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, string> data_int32_str_map = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          AllFieldsMessage_DataInt32StrMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AllFieldsMessage_DataInt32StrMapEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&data_int32_str_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v3.AllFieldsMessage.DataInt32StrMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v3.AllFieldsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v3.AllFieldsMessage)
  return false;
#undef DO_
}

void AllFieldsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v3.AllFieldsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double data_double = 1;
  if (this->data_double() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->data_double(), output);
  }

  // float data_float = 2;
  if (this->data_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->data_float(), output);
  }

  // int32 data_int32 = 3;
  if (this->data_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data_int32(), output);
  }

  // int64 data_int64 = 4;
  if (this->data_int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->data_int64(), output);
  }

  // uint32 data_uint32 = 5;
  if (this->data_uint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_uint32(), output);
  }

  // uint64 data_uint64 = 6;
  if (this->data_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->data_uint64(), output);
  }

  // sint32 data_sint32 = 7;
  if (this->data_sint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->data_sint32(), output);
  }

  // sint64 data_sint64 = 8;
  if (this->data_sint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->data_sint64(), output);
  }

  // fixed32 data_fixed32 = 9;
  if (this->data_fixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->data_fixed32(), output);
  }

  // fixed64 data_fixed64 = 10;
  if (this->data_fixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->data_fixed64(), output);
  }

  // sfixed32 data_sfixed32 = 11;
  if (this->data_sfixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(11, this->data_sfixed32(), output);
  }

  // sfixed64 data_sfixed = 12;
  if (this->data_sfixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->data_sfixed(), output);
  }

  // bool data_bool = 13;
  if (this->data_bool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->data_bool(), output);
  }

  // string data_string = 14;
  if (this->data_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_string().data(), static_cast<int>(this->data_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v3.AllFieldsMessage.data_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->data_string(), output);
  }

  // bytes data_bytes = 15;
  if (this->data_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->data_bytes(), output);
  }

  // .v3.AllFieldsMessage.EnumField enum_data = 16;
  if (this->enum_data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->enum_data(), output);
  }

  // repeated int32 data_int32_array = 17;
  if (this->data_int32_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_int32_array_cached_byte_size_));
  }
  for (int i = 0, n = this->data_int32_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->data_int32_array(i), output);
  }

  // map<int32, string> data_int32_str_map = 18;
  if (!this->data_int32_str_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v3.AllFieldsMessage.DataInt32StrMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->data_int32_str_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data_int32_str_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->data_int32_str_map().begin();
          it != this->data_int32_str_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_int32_str_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            18, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->data_int32_str_map().begin();
          it != this->data_int32_str_map().end(); ++it) {
        entry.reset(data_int32_str_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            18, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v3.AllFieldsMessage)
}

::google::protobuf::uint8* AllFieldsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v3.AllFieldsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double data_double = 1;
  if (this->data_double() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->data_double(), target);
  }

  // float data_float = 2;
  if (this->data_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->data_float(), target);
  }

  // int32 data_int32 = 3;
  if (this->data_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data_int32(), target);
  }

  // int64 data_int64 = 4;
  if (this->data_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->data_int64(), target);
  }

  // uint32 data_uint32 = 5;
  if (this->data_uint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_uint32(), target);
  }

  // uint64 data_uint64 = 6;
  if (this->data_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->data_uint64(), target);
  }

  // sint32 data_sint32 = 7;
  if (this->data_sint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->data_sint32(), target);
  }

  // sint64 data_sint64 = 8;
  if (this->data_sint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->data_sint64(), target);
  }

  // fixed32 data_fixed32 = 9;
  if (this->data_fixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->data_fixed32(), target);
  }

  // fixed64 data_fixed64 = 10;
  if (this->data_fixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->data_fixed64(), target);
  }

  // sfixed32 data_sfixed32 = 11;
  if (this->data_sfixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(11, this->data_sfixed32(), target);
  }

  // sfixed64 data_sfixed = 12;
  if (this->data_sfixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->data_sfixed(), target);
  }

  // bool data_bool = 13;
  if (this->data_bool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->data_bool(), target);
  }

  // string data_string = 14;
  if (this->data_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_string().data(), static_cast<int>(this->data_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v3.AllFieldsMessage.data_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->data_string(), target);
  }

  // bytes data_bytes = 15;
  if (this->data_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->data_bytes(), target);
  }

  // .v3.AllFieldsMessage.EnumField enum_data = 16;
  if (this->enum_data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->enum_data(), target);
  }

  // repeated int32 data_int32_array = 17;
  if (this->data_int32_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_int32_array_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->data_int32_array_, target);
  }

  // map<int32, string> data_int32_str_map = 18;
  if (!this->data_int32_str_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "v3.AllFieldsMessage.DataInt32StrMapEntry.value");
      }
    };

    if (deterministic &&
        this->data_int32_str_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data_int32_str_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->data_int32_str_map().begin();
          it != this->data_int32_str_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_int32_str_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       18, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->data_int32_str_map().begin();
          it != this->data_int32_str_map().end(); ++it) {
        entry.reset(data_int32_str_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       18, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v3.AllFieldsMessage)
  return target;
}

size_t AllFieldsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v3.AllFieldsMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 data_int32_array = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->data_int32_array_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_int32_array_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<int32, string> data_int32_str_map = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->data_int32_str_map_size());
  {
    ::google::protobuf::scoped_ptr<AllFieldsMessage_DataInt32StrMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->data_int32_str_map().begin();
        it != this->data_int32_str_map().end(); ++it) {
      entry.reset(data_int32_str_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string data_string = 14;
  if (this->data_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_string());
  }

  // bytes data_bytes = 15;
  if (this->data_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_bytes());
  }

  // double data_double = 1;
  if (this->data_double() != 0) {
    total_size += 1 + 8;
  }

  // float data_float = 2;
  if (this->data_float() != 0) {
    total_size += 1 + 4;
  }

  // int32 data_int32 = 3;
  if (this->data_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_int32());
  }

  // int64 data_int64 = 4;
  if (this->data_int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data_int64());
  }

  // uint64 data_uint64 = 6;
  if (this->data_uint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_uint64());
  }

  // uint32 data_uint32 = 5;
  if (this->data_uint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_uint32());
  }

  // sint32 data_sint32 = 7;
  if (this->data_sint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->data_sint32());
  }

  // sint64 data_sint64 = 8;
  if (this->data_sint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_sint64());
  }

  // fixed64 data_fixed64 = 10;
  if (this->data_fixed64() != 0) {
    total_size += 1 + 8;
  }

  // fixed32 data_fixed32 = 9;
  if (this->data_fixed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 data_sfixed32 = 11;
  if (this->data_sfixed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed64 data_sfixed = 12;
  if (this->data_sfixed() != 0) {
    total_size += 1 + 8;
  }

  // bool data_bool = 13;
  if (this->data_bool() != 0) {
    total_size += 1 + 1;
  }

  // .v3.AllFieldsMessage.EnumField enum_data = 16;
  if (this->enum_data() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllFieldsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v3.AllFieldsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AllFieldsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllFieldsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v3.AllFieldsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v3.AllFieldsMessage)
    MergeFrom(*source);
  }
}

void AllFieldsMessage::MergeFrom(const AllFieldsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v3.AllFieldsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_int32_array_.MergeFrom(from.data_int32_array_);
  data_int32_str_map_.MergeFrom(from.data_int32_str_map_);
  if (from.data_string().size() > 0) {

    data_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_string_);
  }
  if (from.data_bytes().size() > 0) {

    data_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_bytes_);
  }
  if (from.data_double() != 0) {
    set_data_double(from.data_double());
  }
  if (from.data_float() != 0) {
    set_data_float(from.data_float());
  }
  if (from.data_int32() != 0) {
    set_data_int32(from.data_int32());
  }
  if (from.data_int64() != 0) {
    set_data_int64(from.data_int64());
  }
  if (from.data_uint64() != 0) {
    set_data_uint64(from.data_uint64());
  }
  if (from.data_uint32() != 0) {
    set_data_uint32(from.data_uint32());
  }
  if (from.data_sint32() != 0) {
    set_data_sint32(from.data_sint32());
  }
  if (from.data_sint64() != 0) {
    set_data_sint64(from.data_sint64());
  }
  if (from.data_fixed64() != 0) {
    set_data_fixed64(from.data_fixed64());
  }
  if (from.data_fixed32() != 0) {
    set_data_fixed32(from.data_fixed32());
  }
  if (from.data_sfixed32() != 0) {
    set_data_sfixed32(from.data_sfixed32());
  }
  if (from.data_sfixed() != 0) {
    set_data_sfixed(from.data_sfixed());
  }
  if (from.data_bool() != 0) {
    set_data_bool(from.data_bool());
  }
  if (from.enum_data() != 0) {
    set_enum_data(from.enum_data());
  }
}

void AllFieldsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v3.AllFieldsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllFieldsMessage::CopyFrom(const AllFieldsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v3.AllFieldsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllFieldsMessage::IsInitialized() const {
  return true;
}

void AllFieldsMessage::Swap(AllFieldsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllFieldsMessage::InternalSwap(AllFieldsMessage* other) {
  using std::swap;
  data_int32_array_.InternalSwap(&other->data_int32_array_);
  data_int32_str_map_.Swap(&other->data_int32_str_map_);
  data_string_.Swap(&other->data_string_);
  data_bytes_.Swap(&other->data_bytes_);
  swap(data_double_, other->data_double_);
  swap(data_float_, other->data_float_);
  swap(data_int32_, other->data_int32_);
  swap(data_int64_, other->data_int64_);
  swap(data_uint64_, other->data_uint64_);
  swap(data_uint32_, other->data_uint32_);
  swap(data_sint32_, other->data_sint32_);
  swap(data_sint64_, other->data_sint64_);
  swap(data_fixed64_, other->data_fixed64_);
  swap(data_fixed32_, other->data_fixed32_);
  swap(data_sfixed32_, other->data_sfixed32_);
  swap(data_sfixed_, other->data_sfixed_);
  swap(data_bool_, other->data_bool_);
  swap(enum_data_, other->enum_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllFieldsMessage::GetMetadata() const {
  protobuf_v3_2fAllFieldsMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fAllFieldsMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3

// @@protoc_insertion_point(global_scope)
