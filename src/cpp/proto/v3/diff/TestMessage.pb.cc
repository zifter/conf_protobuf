// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v3/diff/TestMessage.proto

#include "v3/diff/TestMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace v3 {
namespace diff {
class TestMessage_TestSection1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage_TestSection1>
      _instance;
} _TestMessage_TestSection1_default_instance_;
class TestMessage_TestSection2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage_TestSection2>
      _instance;
} _TestMessage_TestSection2_default_instance_;
class TestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage>
      _instance;
} _TestMessage_default_instance_;
}  // namespace diff
}  // namespace v3
namespace protobuf_v3_2fdiff_2fTestMessage_2eproto {
void InitDefaultsTestMessage_TestSection1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::v3::diff::_TestMessage_TestSection1_default_instance_;
    new (ptr) ::v3::diff::TestMessage_TestSection1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v3::diff::TestMessage_TestSection1::InitAsDefaultInstance();
}

void InitDefaultsTestMessage_TestSection1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMessage_TestSection1Impl);
}

void InitDefaultsTestMessage_TestSection2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::v3::diff::_TestMessage_TestSection2_default_instance_;
    new (ptr) ::v3::diff::TestMessage_TestSection2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v3::diff::TestMessage_TestSection2::InitAsDefaultInstance();
}

void InitDefaultsTestMessage_TestSection2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMessage_TestSection2Impl);
}

void InitDefaultsTestMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection1();
  protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection2();
  {
    void* ptr = &::v3::diff::_TestMessage_default_instance_;
    new (ptr) ::v3::diff::TestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v3::diff::TestMessage::InitAsDefaultInstance();
}

void InitDefaultsTestMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection1, value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection1, value2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection2, value3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage_TestSection2, value4_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, section1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, section2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, value5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, value6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v3::diff::TestMessage, array_values_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v3::diff::TestMessage_TestSection1)},
  { 7, -1, sizeof(::v3::diff::TestMessage_TestSection2)},
  { 14, -1, sizeof(::v3::diff::TestMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v3::diff::_TestMessage_TestSection1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v3::diff::_TestMessage_TestSection2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v3::diff::_TestMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "v3/diff/TestMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031v3/diff/TestMessage.proto\022\007v3.diff\"\260\002\n"
      "\013TestMessage\0223\n\010section1\030\001 \001(\0132!.v3.diff"
      ".TestMessage.TestSection1\0223\n\010section2\030\002 "
      "\001(\0132!.v3.diff.TestMessage.TestSection2\022\016"
      "\n\006value5\030\003 \001(\r\022\016\n\006value6\030\004 \001(\001\0227\n\014array_"
      "values\030\005 \003(\0132!.v3.diff.TestMessage.TestS"
      "ection1\032.\n\014TestSection1\022\016\n\006value1\030\001 \001(\r\022"
      "\016\n\006value2\030\002 \001(\r\032.\n\014TestSection2\022\016\n\006value"
      "3\030\001 \001(\001\022\016\n\006value4\030\002 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 351);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "v3/diff/TestMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_v3_2fdiff_2fTestMessage_2eproto
namespace v3 {
namespace diff {

// ===================================================================

void TestMessage_TestSection1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage_TestSection1::kValue1FieldNumber;
const int TestMessage_TestSection1::kValue2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage_TestSection1::TestMessage_TestSection1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:v3.diff.TestMessage.TestSection1)
}
TestMessage_TestSection1::TestMessage_TestSection1(const TestMessage_TestSection1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value1_, &from.value1_,
    static_cast<size_t>(reinterpret_cast<char*>(&value2_) -
    reinterpret_cast<char*>(&value1_)) + sizeof(value2_));
  // @@protoc_insertion_point(copy_constructor:v3.diff.TestMessage.TestSection1)
}

void TestMessage_TestSection1::SharedCtor() {
  ::memset(&value1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value2_) -
      reinterpret_cast<char*>(&value1_)) + sizeof(value2_));
  _cached_size_ = 0;
}

TestMessage_TestSection1::~TestMessage_TestSection1() {
  // @@protoc_insertion_point(destructor:v3.diff.TestMessage.TestSection1)
  SharedDtor();
}

void TestMessage_TestSection1::SharedDtor() {
}

void TestMessage_TestSection1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessage_TestSection1::descriptor() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage_TestSection1& TestMessage_TestSection1::default_instance() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection1();
  return *internal_default_instance();
}

TestMessage_TestSection1* TestMessage_TestSection1::New(::google::protobuf::Arena* arena) const {
  TestMessage_TestSection1* n = new TestMessage_TestSection1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMessage_TestSection1::Clear() {
// @@protoc_insertion_point(message_clear_start:v3.diff.TestMessage.TestSection1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value2_) -
      reinterpret_cast<char*>(&value1_)) + sizeof(value2_));
  _internal_metadata_.Clear();
}

bool TestMessage_TestSection1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v3.diff.TestMessage.TestSection1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v3.diff.TestMessage.TestSection1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v3.diff.TestMessage.TestSection1)
  return false;
#undef DO_
}

void TestMessage_TestSection1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v3.diff.TestMessage.TestSection1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value1 = 1;
  if (this->value1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value1(), output);
  }

  // uint32 value2 = 2;
  if (this->value2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v3.diff.TestMessage.TestSection1)
}

::google::protobuf::uint8* TestMessage_TestSection1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v3.diff.TestMessage.TestSection1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value1 = 1;
  if (this->value1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value1(), target);
  }

  // uint32 value2 = 2;
  if (this->value2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v3.diff.TestMessage.TestSection1)
  return target;
}

size_t TestMessage_TestSection1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v3.diff.TestMessage.TestSection1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value1 = 1;
  if (this->value1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value1());
  }

  // uint32 value2 = 2;
  if (this->value2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessage_TestSection1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v3.diff.TestMessage.TestSection1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage_TestSection1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage_TestSection1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v3.diff.TestMessage.TestSection1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v3.diff.TestMessage.TestSection1)
    MergeFrom(*source);
  }
}

void TestMessage_TestSection1::MergeFrom(const TestMessage_TestSection1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v3.diff.TestMessage.TestSection1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value1() != 0) {
    set_value1(from.value1());
  }
  if (from.value2() != 0) {
    set_value2(from.value2());
  }
}

void TestMessage_TestSection1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v3.diff.TestMessage.TestSection1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage_TestSection1::CopyFrom(const TestMessage_TestSection1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v3.diff.TestMessage.TestSection1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage_TestSection1::IsInitialized() const {
  return true;
}

void TestMessage_TestSection1::Swap(TestMessage_TestSection1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage_TestSection1::InternalSwap(TestMessage_TestSection1* other) {
  using std::swap;
  swap(value1_, other->value1_);
  swap(value2_, other->value2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMessage_TestSection1::GetMetadata() const {
  protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestMessage_TestSection2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage_TestSection2::kValue3FieldNumber;
const int TestMessage_TestSection2::kValue4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage_TestSection2::TestMessage_TestSection2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:v3.diff.TestMessage.TestSection2)
}
TestMessage_TestSection2::TestMessage_TestSection2(const TestMessage_TestSection2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value3_, &from.value3_,
    static_cast<size_t>(reinterpret_cast<char*>(&value4_) -
    reinterpret_cast<char*>(&value3_)) + sizeof(value4_));
  // @@protoc_insertion_point(copy_constructor:v3.diff.TestMessage.TestSection2)
}

void TestMessage_TestSection2::SharedCtor() {
  ::memset(&value3_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value4_) -
      reinterpret_cast<char*>(&value3_)) + sizeof(value4_));
  _cached_size_ = 0;
}

TestMessage_TestSection2::~TestMessage_TestSection2() {
  // @@protoc_insertion_point(destructor:v3.diff.TestMessage.TestSection2)
  SharedDtor();
}

void TestMessage_TestSection2::SharedDtor() {
}

void TestMessage_TestSection2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessage_TestSection2::descriptor() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage_TestSection2& TestMessage_TestSection2::default_instance() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage_TestSection2();
  return *internal_default_instance();
}

TestMessage_TestSection2* TestMessage_TestSection2::New(::google::protobuf::Arena* arena) const {
  TestMessage_TestSection2* n = new TestMessage_TestSection2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMessage_TestSection2::Clear() {
// @@protoc_insertion_point(message_clear_start:v3.diff.TestMessage.TestSection2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value3_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value4_) -
      reinterpret_cast<char*>(&value3_)) + sizeof(value4_));
  _internal_metadata_.Clear();
}

bool TestMessage_TestSection2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v3.diff.TestMessage.TestSection2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value3 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v3.diff.TestMessage.TestSection2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v3.diff.TestMessage.TestSection2)
  return false;
#undef DO_
}

void TestMessage_TestSection2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v3.diff.TestMessage.TestSection2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value3 = 1;
  if (this->value3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value3(), output);
  }

  // double value4 = 2;
  if (this->value4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value4(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v3.diff.TestMessage.TestSection2)
}

::google::protobuf::uint8* TestMessage_TestSection2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v3.diff.TestMessage.TestSection2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value3 = 1;
  if (this->value3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value3(), target);
  }

  // double value4 = 2;
  if (this->value4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value4(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v3.diff.TestMessage.TestSection2)
  return target;
}

size_t TestMessage_TestSection2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v3.diff.TestMessage.TestSection2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double value3 = 1;
  if (this->value3() != 0) {
    total_size += 1 + 8;
  }

  // double value4 = 2;
  if (this->value4() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessage_TestSection2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v3.diff.TestMessage.TestSection2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage_TestSection2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage_TestSection2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v3.diff.TestMessage.TestSection2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v3.diff.TestMessage.TestSection2)
    MergeFrom(*source);
  }
}

void TestMessage_TestSection2::MergeFrom(const TestMessage_TestSection2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v3.diff.TestMessage.TestSection2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value3() != 0) {
    set_value3(from.value3());
  }
  if (from.value4() != 0) {
    set_value4(from.value4());
  }
}

void TestMessage_TestSection2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v3.diff.TestMessage.TestSection2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage_TestSection2::CopyFrom(const TestMessage_TestSection2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v3.diff.TestMessage.TestSection2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage_TestSection2::IsInitialized() const {
  return true;
}

void TestMessage_TestSection2::Swap(TestMessage_TestSection2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage_TestSection2::InternalSwap(TestMessage_TestSection2* other) {
  using std::swap;
  swap(value3_, other->value3_);
  swap(value4_, other->value4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMessage_TestSection2::GetMetadata() const {
  protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestMessage::InitAsDefaultInstance() {
  ::v3::diff::_TestMessage_default_instance_._instance.get_mutable()->section1_ = const_cast< ::v3::diff::TestMessage_TestSection1*>(
      ::v3::diff::TestMessage_TestSection1::internal_default_instance());
  ::v3::diff::_TestMessage_default_instance_._instance.get_mutable()->section2_ = const_cast< ::v3::diff::TestMessage_TestSection2*>(
      ::v3::diff::TestMessage_TestSection2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage::kSection1FieldNumber;
const int TestMessage::kSection2FieldNumber;
const int TestMessage::kValue5FieldNumber;
const int TestMessage::kValue6FieldNumber;
const int TestMessage::kArrayValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage::TestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:v3.diff.TestMessage)
}
TestMessage::TestMessage(const TestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      array_values_(from.array_values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_section1()) {
    section1_ = new ::v3::diff::TestMessage_TestSection1(*from.section1_);
  } else {
    section1_ = NULL;
  }
  if (from.has_section2()) {
    section2_ = new ::v3::diff::TestMessage_TestSection2(*from.section2_);
  } else {
    section2_ = NULL;
  }
  ::memcpy(&value6_, &from.value6_,
    static_cast<size_t>(reinterpret_cast<char*>(&value5_) -
    reinterpret_cast<char*>(&value6_)) + sizeof(value5_));
  // @@protoc_insertion_point(copy_constructor:v3.diff.TestMessage)
}

void TestMessage::SharedCtor() {
  ::memset(&section1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value5_) -
      reinterpret_cast<char*>(&section1_)) + sizeof(value5_));
  _cached_size_ = 0;
}

TestMessage::~TestMessage() {
  // @@protoc_insertion_point(destructor:v3.diff.TestMessage)
  SharedDtor();
}

void TestMessage::SharedDtor() {
  if (this != internal_default_instance()) delete section1_;
  if (this != internal_default_instance()) delete section2_;
}

void TestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessage::descriptor() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage& TestMessage::default_instance() {
  ::protobuf_v3_2fdiff_2fTestMessage_2eproto::InitDefaultsTestMessage();
  return *internal_default_instance();
}

TestMessage* TestMessage::New(::google::protobuf::Arena* arena) const {
  TestMessage* n = new TestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:v3.diff.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_values_.Clear();
  if (GetArenaNoVirtual() == NULL && section1_ != NULL) {
    delete section1_;
  }
  section1_ = NULL;
  if (GetArenaNoVirtual() == NULL && section2_ != NULL) {
    delete section2_;
  }
  section2_ = NULL;
  ::memset(&value6_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value5_) -
      reinterpret_cast<char*>(&value6_)) + sizeof(value5_));
  _internal_metadata_.Clear();
}

bool TestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v3.diff.TestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v3.diff.TestMessage.TestSection1 section1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_section1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v3.diff.TestMessage.TestSection2 section2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_section2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value6 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .v3.diff.TestMessage.TestSection1 array_values = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_array_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v3.diff.TestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v3.diff.TestMessage)
  return false;
#undef DO_
}

void TestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v3.diff.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v3.diff.TestMessage.TestSection1 section1 = 1;
  if (this->has_section1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->section1_, output);
  }

  // .v3.diff.TestMessage.TestSection2 section2 = 2;
  if (this->has_section2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->section2_, output);
  }

  // uint32 value5 = 3;
  if (this->value5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value5(), output);
  }

  // double value6 = 4;
  if (this->value6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->value6(), output);
  }

  // repeated .v3.diff.TestMessage.TestSection1 array_values = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->array_values(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v3.diff.TestMessage)
}

::google::protobuf::uint8* TestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v3.diff.TestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v3.diff.TestMessage.TestSection1 section1 = 1;
  if (this->has_section1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->section1_, deterministic, target);
  }

  // .v3.diff.TestMessage.TestSection2 section2 = 2;
  if (this->has_section2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->section2_, deterministic, target);
  }

  // uint32 value5 = 3;
  if (this->value5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value5(), target);
  }

  // double value6 = 4;
  if (this->value6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->value6(), target);
  }

  // repeated .v3.diff.TestMessage.TestSection1 array_values = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->array_values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v3.diff.TestMessage)
  return target;
}

size_t TestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v3.diff.TestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .v3.diff.TestMessage.TestSection1 array_values = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->array_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->array_values(static_cast<int>(i)));
    }
  }

  // .v3.diff.TestMessage.TestSection1 section1 = 1;
  if (this->has_section1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->section1_);
  }

  // .v3.diff.TestMessage.TestSection2 section2 = 2;
  if (this->has_section2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->section2_);
  }

  // double value6 = 4;
  if (this->value6() != 0) {
    total_size += 1 + 8;
  }

  // uint32 value5 = 3;
  if (this->value5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v3.diff.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v3.diff.TestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v3.diff.TestMessage)
    MergeFrom(*source);
  }
}

void TestMessage::MergeFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v3.diff.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_values_.MergeFrom(from.array_values_);
  if (from.has_section1()) {
    mutable_section1()->::v3::diff::TestMessage_TestSection1::MergeFrom(from.section1());
  }
  if (from.has_section2()) {
    mutable_section2()->::v3::diff::TestMessage_TestSection2::MergeFrom(from.section2());
  }
  if (from.value6() != 0) {
    set_value6(from.value6());
  }
  if (from.value5() != 0) {
    set_value5(from.value5());
  }
}

void TestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v3.diff.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage::CopyFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v3.diff.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage::IsInitialized() const {
  return true;
}

void TestMessage::Swap(TestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage::InternalSwap(TestMessage* other) {
  using std::swap;
  array_values_.InternalSwap(&other->array_values_);
  swap(section1_, other->section1_);
  swap(section2_, other->section2_);
  swap(value6_, other->value6_);
  swap(value5_, other->value5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMessage::GetMetadata() const {
  protobuf_v3_2fdiff_2fTestMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_v3_2fdiff_2fTestMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace diff
}  // namespace v3

// @@protoc_insertion_point(global_scope)
